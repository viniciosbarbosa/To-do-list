{"version":3,"sources":["angular:jit:template:file:src/app/components/header/header.component.html","node_modules/@angular/material/fesm2022/divider.mjs","src/app/components/header/header.component.ts"],"sourcesContent":["<header class=\"header\">\n  <h1 class=\"header_title\">To do list</h1>\n  <button\n    mat-icon-button\n    class=\"header_btn\"\n    aria-label=\"adicionar nova tarefa\"\n    (click)=\"handleOpenModal()\"\n  >\n    <mat-icon>add</mat-icon>\n  </button>\n</header>\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { MatCommonModule } from '@angular/material/core';\n\nclass MatDivider {\n    constructor() {\n        this._vertical = false;\n        this._inset = false;\n    }\n    /** Whether the divider is vertically aligned. */\n    get vertical() {\n        return this._vertical;\n    }\n    set vertical(value) {\n        this._vertical = coerceBooleanProperty(value);\n    }\n    /** Whether the divider is an inset divider. */\n    get inset() {\n        return this._inset;\n    }\n    set inset(value) {\n        this._inset = coerceBooleanProperty(value);\n    }\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDivider, deps: [], target: i0.ɵɵFactoryTarget.Component }); }\n    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"14.0.0\", version: \"16.1.1\", type: MatDivider, selector: \"mat-divider\", inputs: { vertical: \"vertical\", inset: \"inset\" }, host: { attributes: { \"role\": \"separator\" }, properties: { \"attr.aria-orientation\": \"vertical ? \\\"vertical\\\" : \\\"horizontal\\\"\", \"class.mat-divider-vertical\": \"vertical\", \"class.mat-divider-horizontal\": \"!vertical\", \"class.mat-divider-inset\": \"inset\" }, classAttribute: \"mat-divider\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-divider{--mat-divider-width:1px;display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color);border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color);border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDivider, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-divider', host: {\n                        'role': 'separator',\n                        '[attr.aria-orientation]': 'vertical ? \"vertical\" : \"horizontal\"',\n                        '[class.mat-divider-vertical]': 'vertical',\n                        '[class.mat-divider-horizontal]': '!vertical',\n                        '[class.mat-divider-inset]': 'inset',\n                        'class': 'mat-divider',\n                    }, template: '', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-divider{--mat-divider-width:1px;display:block;margin:0;border-top-style:solid;border-top-color:var(--mat-divider-color);border-top-width:var(--mat-divider-width)}.mat-divider.mat-divider-vertical{border-top:0;border-right-style:solid;border-right-color:var(--mat-divider-color);border-right-width:var(--mat-divider-width)}.mat-divider.mat-divider-inset{margin-left:80px}[dir=rtl] .mat-divider.mat-divider-inset{margin-left:auto;margin-right:80px}\"] }]\n        }], propDecorators: { vertical: [{\n                type: Input\n            }], inset: [{\n                type: Input\n            }] } });\n\nclass MatDividerModule {\n    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDividerModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }\n    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDividerModule, declarations: [MatDivider], imports: [MatCommonModule], exports: [MatDivider, MatCommonModule] }); }\n    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDividerModule, imports: [MatCommonModule, MatCommonModule] }); }\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"16.1.1\", ngImport: i0, type: MatDividerModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatDivider, MatCommonModule],\n                    declarations: [MatDivider],\n                }]\n        }] });\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatDivider, MatDividerModule };\n\n","import { Component, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatDividerModule } from \"@angular/material/divider\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { MatDialog, MatDialogModule } from \"@angular/material/dialog\";\nimport { ToDoFormComponent } from \"../to-do-form/to-do-form.component\";\n@Component({\n  selector: \"app-header\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    MatButtonModule,\n    MatDividerModule,\n    MatIconModule,\n    MatDialogModule,\n  ],\n  templateUrl: \"./header.component.html\",\n  styleUrls: [],\n})\nexport class HeaderComponent {\n  private dialogService = inject(MatDialog);\n\n  handleOpenModal() {\n    this.dialogService.open(ToDoFormComponent, {\n      width: \"50vw\",\n      maxHeight: \"80vh\",\n    });\n  }\n}\n"],"mappings":"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","names":["HeaderComponent"],"x_google_ignoreList":[1]}