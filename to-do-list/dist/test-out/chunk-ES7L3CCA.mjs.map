{
  "version": 3,
  "sources": ["src/app/models/enum/toDoKeyLocalStorage.ts", "src/app/services/to-do-list-signals.service.ts"],
  "sourcesContent": ["export enum TodoKeyLocalStorage {\n  ToDoList = \"ToDoList\",\n}\n", "import { Injectable, signal } from \"@angular/core\";\nimport { to_do_model } from \"../models/model/to_do_model\";\nimport { TodoKeyLocalStorage } from \"../models/enum/toDoKeyLocalStorage\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ToDoListSignalsService {\n  public toDoState = signal<Array<to_do_model>>([]);\n\n  public createUpdateToDo(params: any): void {\n    if (params && params.id !== null && params.id !== undefined) {\n      this.toDoState.mutate((to_do) => {\n        if (to_do !== null) {\n          const existingItemIndex = to_do.findIndex(\n            (item) => item.id === params.id\n          );\n          if (existingItemIndex !== -1) {\n            to_do[existingItemIndex] = {\n              ...to_do[existingItemIndex],\n              ...params,\n            };\n          } else {\n            to_do.push(params);\n          }\n          console.log(to_do);\n          this.saveInLocalStorage();\n        }\n      });\n    }\n  }\n\n  public saveInLocalStorage(): void {\n    const dataToDoList = JSON.stringify(this.toDoState());\n    dataToDoList &&\n      localStorage.setItem(TodoKeyLocalStorage.ToDoList, dataToDoList);\n  }\n\n  public deleteLocalStorage(): void {\n    localStorage.removeItem(TodoKeyLocalStorage.ToDoList);\n  }\n\n  public deleteAllLocalStorage(type: boolean) {\n    let todosString = localStorage.getItem(\"ToDoList\");\n\n    if (todosString !== null) {\n      let todos: to_do_model[] = JSON.parse(todosString) || [];\n\n      todos = todos.filter((todo: to_do_model) => todo.done !== type);\n\n      // Atualize o todoState com os dados filtrados\n      this.toDoState.set(todos);\n\n      // Salve os dados filtrados no armazenamento local\n      localStorage.setItem(\"ToDoList\", JSON.stringify(todos));\n    }\n  }\n}\n"],
  "mappings": ";;;;;;;;;;AAAA,IAAY;CAAZ,SAAYA,sBAAmB;AAC7B,EAAAA,qBAAA,UAAA,IAAA;AACF,GAFY,wBAAA,sBAAmB,CAAA,EAAA;;;ACO/B,IAAa,yBAAb,MAAaC,wBAAsB;EAAnC,cAAA;AACS,SAAA,YAAY,OAA2B,CAAA,CAAE;EAiDlD;EA/CS,iBAAiB,QAAW;AACjC,QAAI,UAAU,OAAO,OAAO,QAAQ,OAAO,OAAO,QAAW;AAC3D,WAAK,UAAU,OAAO,CAAC,UAAS;AAC9B,YAAI,UAAU,MAAM;AAClB,gBAAM,oBAAoB,MAAM,UAC9B,CAAC,SAAS,KAAK,OAAO,OAAO,EAAE;AAEjC,cAAI,sBAAsB,IAAI;AAC5B,kBAAM,iBAAiB,IAAI,kCACtB,MAAM,iBAAiB,IACvB;iBAEA;AACL,kBAAM,KAAK,MAAM;;AAEnB,kBAAQ,IAAI,KAAK;AACjB,eAAK,mBAAkB;;MAE3B,CAAC;;EAEL;EAEO,qBAAkB;AACvB,UAAM,eAAe,KAAK,UAAU,KAAK,UAAS,CAAE;AACpD,oBACE,aAAa,QAAQ,oBAAoB,UAAU,YAAY;EACnE;EAEO,qBAAkB;AACvB,iBAAa,WAAW,oBAAoB,QAAQ;EACtD;EAEO,sBAAsB,MAAa;AACxC,QAAI,cAAc,aAAa,QAAQ,UAAU;AAEjD,QAAI,gBAAgB,MAAM;AACxB,UAAI,QAAuB,KAAK,MAAM,WAAW,KAAK,CAAA;AAEtD,cAAQ,MAAM,OAAO,CAAC,SAAsB,KAAK,SAAS,IAAI;AAG9D,WAAK,UAAU,IAAI,KAAK;AAGxB,mBAAa,QAAQ,YAAY,KAAK,UAAU,KAAK,CAAC;;EAE1D;;AAjDW,yBAAsB,WAAA;EAHlC,WAAW;IACV,YAAY;GACb;GACY,sBAAsB;",
  "names": ["TodoKeyLocalStorage", "ToDoListSignalsService"]
}
