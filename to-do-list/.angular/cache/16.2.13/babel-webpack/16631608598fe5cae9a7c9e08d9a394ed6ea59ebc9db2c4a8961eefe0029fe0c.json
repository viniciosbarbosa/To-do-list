{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormControl, FormGroup, FormsModule, ReactiveFormsModule, Validators } from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\nlet ToDoFormComponent = class ToDoFormComponent {\n  constructor() {\n    this.dialogService = inject(MatDialogRef);\n  }\n  ngOnInit() {\n    this.carregarForm();\n  }\n  carregarForm() {\n    this.to_do_form = new FormGroup({\n      title: new FormControl(\"\", [Validators.required, Validators.minLength(3)]),\n      description: new FormControl(\"\", [Validators.required, Validators.minLength(5)])\n    });\n  }\n  setValueForm() {}\n  handleSubmitForm() {}\n  handleCloseModal() {\n    this.dialogService.close();\n  }\n};\nToDoFormComponent = __decorate([Component({\n  selector: \"app-to-do-form\",\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, MatButtonModule, MatCardModule, MatFormFieldModule, MatInputModule],\n  templateUrl: \"./to-do-form.component.html\",\n  styleUrls: [\"./to-do-form.component.scss\"]\n})], ToDoFormComponent);\nexport { ToDoFormComponent };","map":{"version":3,"names":["Component","inject","CommonModule","FormControl","FormGroup","FormsModule","ReactiveFormsModule","Validators","MatButtonModule","MatCardModule","MatFormFieldModule","MatInputModule","MatDialogRef","ToDoFormComponent","constructor","dialogService","ngOnInit","carregarForm","to_do_form","title","required","minLength","description","setValueForm","handleSubmitForm","handleCloseModal","close","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["/Users/viniciussantos/Documents/projetos/Front/udemy/to-do-list/to-do-list/to-do-list/src/app/components/to-do-form/to-do-form.component.ts"],"sourcesContent":["import { Component, OnInit, inject } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport {\n  FormControl,\n  FormGroup,\n  FormsModule,\n  ReactiveFormsModule,\n  Validators,\n} from \"@angular/forms\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\nimport { MatInputModule } from \"@angular/material/input\";\nimport { MatDialogRef } from \"@angular/material/dialog\";\nimport { HeaderComponent } from \"../header/header.component\";\n\n@Component({\n  selector: \"app-to-do-form\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatInputModule,\n  ],\n  templateUrl: \"./to-do-form.component.html\",\n  styleUrls: [\"./to-do-form.component.scss\"],\n})\nexport class ToDoFormComponent implements OnInit {\n  public to_do_form!: FormGroup;\n  public dialogService = inject(MatDialogRef<HeaderComponent>);\n\n  ngOnInit(): void {\n    this.carregarForm();\n  }\n\n  carregarForm(): void {\n    this.to_do_form = new FormGroup({\n      title: new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(3),\n      ]),\n      description: new FormControl(\"\", [\n        Validators.required,\n        Validators.minLength(5),\n      ]),\n    });\n  }\n\n  setValueForm(): void {}\n\n  handleSubmitForm(): void {}\n\n  handleCloseModal(): void {\n    this.dialogService.close();\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,EAAUC,MAAM,QAAQ,eAAe;AACzD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SACEC,WAAW,EACXC,SAAS,EACTC,WAAW,EACXC,mBAAmB,EACnBC,UAAU,QACL,gBAAgB;AACvB,SAASC,eAAe,QAAQ,0BAA0B;AAC1D,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,kBAAkB,QAAQ,8BAA8B;AACjE,SAASC,cAAc,QAAQ,yBAAyB;AACxD,SAASC,YAAY,QAAQ,0BAA0B;AAkBvD,IAAaC,iBAAiB,GAA9B,MAAaA,iBAAiB;EAA9BC,YAAA;IAES,KAAAC,aAAa,GAAGd,MAAM,CAACW,YAA6B,CAAC;EA0B9D;EAxBEI,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV,IAAI,CAACC,UAAU,GAAG,IAAId,SAAS,CAAC;MAC9Be,KAAK,EAAE,IAAIhB,WAAW,CAAC,EAAE,EAAE,CACzBI,UAAU,CAACa,QAAQ,EACnBb,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,CACxB,CAAC;MACFC,WAAW,EAAE,IAAInB,WAAW,CAAC,EAAE,EAAE,CAC/BI,UAAU,CAACa,QAAQ,EACnBb,UAAU,CAACc,SAAS,CAAC,CAAC,CAAC,CACxB;KACF,CAAC;EACJ;EAEAE,YAAYA,CAAA,GAAU;EAEtBC,gBAAgBA,CAAA,GAAU;EAE1BC,gBAAgBA,CAAA;IACd,IAAI,CAACV,aAAa,CAACW,KAAK,EAAE;EAC5B;CACD;AA5BYb,iBAAiB,GAAAc,UAAA,EAf7B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,gBAAgB;EAC1BC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACP5B,YAAY,EACZG,WAAW,EACXC,mBAAmB,EACnBE,eAAe,EACfC,aAAa,EACbC,kBAAkB,EAClBC,cAAc,CACf;EACDoB,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,C,EACWnB,iBAAiB,CA4B7B;SA5BYA,iBAAiB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}