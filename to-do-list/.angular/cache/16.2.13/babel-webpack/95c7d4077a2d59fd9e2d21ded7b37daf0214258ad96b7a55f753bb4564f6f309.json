{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { MatIconModule } from \"@angular/material/icon\";\nimport { Component, computed, inject } from \"@angular/core\";\nimport { CommonModule, NgTemplateOutlet } from \"@angular/common\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { ToDoListSignalsService } from \"src/app/services/to-do-list-signals.service\";\nimport { TodoKeyLocalStorage } from \"src/app/models/enum/toDoKeyLocalStorage\";\nlet ToDoCardComponent = class ToDoCardComponent {\n  constructor() {\n    this.toDoListSignalsService = inject(ToDoListSignalsService);\n    this.toDoState = this.toDoListSignalsService.toDoState;\n    this.toDoListData = computed(() => this.toDoState());\n  }\n  ngOnInit() {\n    this.getDatasLocalStorage();\n    console.log(this.toDoListData());\n  }\n  getDatasLocalStorage() {\n    const toDoData = localStorage.getItem(TodoKeyLocalStorage.ToDoList);\n    toDoData && this.toDoState.set(JSON.parse(toDoData));\n  }\n  saveInLocalStorage() {\n    this.toDoListSignalsService.saveInLocalStorage();\n  }\n  handleDoneElement(toDoId) {\n    if (toDoId) {\n      this.toDoState.mutate(todos => {\n        const todoSelected = todos.find(todo => todo?.id === toDoId);\n        console.log(todoSelected);\n        todoSelected && (todoSelected.done = true);\n        this.saveInLocalStorage();\n      });\n    }\n  }\n  handleDeleteElement(toDo) {\n    if (toDo) {\n      const index = this.toDoListData().indexOf(toDo);\n      if (index != -1) {\n        this.toDoState.mutate(allToDo => {\n          allToDo.splice(index, 1);\n          this.saveInLocalStorage();\n        });\n      }\n    }\n  }\n  deleteAllLocalStorage(type) {\n    const elementsFiltred = [];\n    this.toDoListData().forEach(element => {\n      if (element.done === type) {\n        elementsFiltred.push(element);\n      }\n    });\n    console.log(elementsFiltred);\n    this.toDoListSignalsService.deleteAllLocalStorage(type);\n  }\n};\nToDoCardComponent = __decorate([Component({\n  selector: \"app-to-do-card\",\n  standalone: true,\n  imports: [CommonModule, NgTemplateOutlet, MatCardModule, MatButtonModule, MatIconModule, MatTabsModule],\n  templateUrl: \"./to-do-card.component.html\",\n  styleUrls: []\n})], ToDoCardComponent);\nexport { ToDoCardComponent };","map":{"version":3,"names":["MatIconModule","Component","computed","inject","CommonModule","NgTemplateOutlet","MatCardModule","MatButtonModule","MatTabsModule","ToDoListSignalsService","TodoKeyLocalStorage","ToDoCardComponent","constructor","toDoListSignalsService","toDoState","toDoListData","ngOnInit","getDatasLocalStorage","console","log","toDoData","localStorage","getItem","ToDoList","set","JSON","parse","saveInLocalStorage","handleDoneElement","toDoId","mutate","todos","todoSelected","find","todo","id","done","handleDeleteElement","toDo","index","indexOf","allToDo","splice","deleteAllLocalStorage","type","elementsFiltred","forEach","element","push","__decorate","selector","standalone","imports","templateUrl","styleUrls"],"sources":["/Users/viniciussantos/Documents/projetos/Front/udemy/to-do-list/to-do-list/to-do-list/src/app/components/to-do-card/to-do-card.component.ts"],"sourcesContent":["import { MatIconModule } from \"@angular/material/icon\";\nimport { Component, OnInit, computed, inject } from \"@angular/core\";\nimport { CommonModule, NgTemplateOutlet } from \"@angular/common\";\nimport { MatCardModule } from \"@angular/material/card\";\nimport { MatButtonModule } from \"@angular/material/button\";\nimport { MatTabsModule } from \"@angular/material/tabs\";\nimport { ToDoListSignalsService } from \"src/app/services/to-do-list-signals.service\";\nimport { TodoKeyLocalStorage } from \"src/app/models/enum/toDoKeyLocalStorage\";\nimport { to_do_model } from \"src/app/models/model/to_do_model\";\n\n@Component({\n  selector: \"app-to-do-card\",\n  standalone: true,\n  imports: [\n    CommonModule,\n    NgTemplateOutlet,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatTabsModule,\n  ],\n  templateUrl: \"./to-do-card.component.html\",\n  styleUrls: [],\n})\nexport class ToDoCardComponent implements OnInit {\n  private toDoListSignalsService = inject(ToDoListSignalsService);\n  private toDoState = this.toDoListSignalsService.toDoState;\n  public toDoListData = computed(() => this.toDoState());\n  public stateButton: any;\n\n  ngOnInit(): void {\n    this.getDatasLocalStorage();\n    console.log(this.toDoListData());\n  }\n\n  getDatasLocalStorage(): void {\n    const toDoData = localStorage.getItem(\n      TodoKeyLocalStorage.ToDoList\n    ) as string;\n\n    toDoData && this.toDoState.set(JSON.parse(toDoData));\n  }\n\n  public saveInLocalStorage(): void {\n    this.toDoListSignalsService.saveInLocalStorage();\n  }\n\n  public handleDoneElement(toDoId: number) {\n    if (toDoId) {\n      this.toDoState.mutate((todos) => {\n        const todoSelected = todos.find(\n          (todo) => todo?.id === toDoId\n        ) as to_do_model;\n\n        console.log(todoSelected);\n\n        todoSelected && (todoSelected.done = true);\n\n        this.saveInLocalStorage();\n      });\n    }\n  }\n\n  public handleDeleteElement(toDo: to_do_model): void {\n    if (toDo) {\n      const index = this.toDoListData().indexOf(toDo);\n\n      if (index != -1) {\n        this.toDoState.mutate((allToDo) => {\n          allToDo.splice(index, 1);\n          this.saveInLocalStorage();\n        });\n      }\n    }\n  }\n\n  public deleteAllLocalStorage(type: boolean) {\n    const elementsFiltred: any[] = [];\n\n    this.toDoListData().forEach((element) => {\n      if (element.done === type) {\n        elementsFiltred.push(element);\n      }\n    });\n\n    console.log(elementsFiltred);\n\n    this.toDoListSignalsService.deleteAllLocalStorage(type);\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}