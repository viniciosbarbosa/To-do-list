{"ast":null,"code":"import { signal } from \"@angular/core\";\nimport { TodoKeyLocalStorage } from \"../models/enum/toDoKeyLocalStorage\";\nimport * as i0 from \"@angular/core\";\nclass ToDoListSignalsService {\n  constructor() {\n    this.toDoState = signal([]);\n  }\n  createUpdateToDo(params) {\n    if (params !== null || params !== undefined) {\n      this.toDoState.mutate(to_do => {\n        if (to_do !== null) {\n          to_do.push(params);\n          console.log(to_do);\n          this.saveInLocalStorage();\n        }\n      });\n    }\n  }\n  saveInLocalStorage() {\n    const dataToDoList = JSON.stringify(this.toDoState());\n    dataToDoList && localStorage.setItem(TodoKeyLocalStorage.ToDoList, dataToDoList);\n  }\n  deleteLocalStorage() {\n    localStorage.removeItem(TodoKeyLocalStorage.ToDoList);\n  }\n  deleteAllLocalStorage(type) {\n    let todosString = localStorage.getItem(\"ToDoList\");\n    if (todosString !== null) {\n      let todos = JSON.parse(todosString) || [];\n      todos = todos.filter(todo => todo.done !== type);\n      // Atualize o todoState com os dados filtrados\n      this.toDoState.set(todos);\n      // Salve os dados filtrados no armazenamento local\n      localStorage.setItem(\"ToDoList\", JSON.stringify(todos));\n    }\n  }\n  static #_ = this.ɵfac = function ToDoListSignalsService_Factory(t) {\n    return new (t || ToDoListSignalsService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ToDoListSignalsService,\n    factory: ToDoListSignalsService.ɵfac,\n    providedIn: \"root\"\n  });\n}\nexport { ToDoListSignalsService };","map":{"version":3,"names":["signal","TodoKeyLocalStorage","ToDoListSignalsService","constructor","toDoState","createUpdateToDo","params","undefined","mutate","to_do","push","console","log","saveInLocalStorage","dataToDoList","JSON","stringify","localStorage","setItem","ToDoList","deleteLocalStorage","removeItem","deleteAllLocalStorage","type","todosString","getItem","todos","parse","filter","todo","done","set","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/viniciussantos/Documents/projetos/Front/udemy/to-do-list/to-do-list/to-do-list/src/app/services/to-do-list-signals.service.ts"],"sourcesContent":["import { Injectable, signal } from \"@angular/core\";\nimport { to_do_model } from \"../models/model/to_do_model\";\nimport { TodoKeyLocalStorage } from \"../models/enum/toDoKeyLocalStorage\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class ToDoListSignalsService {\n  public toDoState = signal<Array<to_do_model>>([]);\n\n  public createUpdateToDo(params: any): void {\n    if (params !== null || params !== undefined) {\n      this.toDoState.mutate((to_do) => {\n        if (to_do !== null) {\n          to_do.push(params);\n          console.log(to_do);\n          this.saveInLocalStorage();\n        }\n      });\n    }\n  }\n\n  public saveInLocalStorage(): void {\n    const dataToDoList = JSON.stringify(this.toDoState());\n    dataToDoList &&\n      localStorage.setItem(TodoKeyLocalStorage.ToDoList, dataToDoList);\n  }\n\n  public deleteLocalStorage(): void {\n    localStorage.removeItem(TodoKeyLocalStorage.ToDoList);\n  }\n\n  public deleteAllLocalStorage(type: boolean) {\n    let todosString = localStorage.getItem(\"ToDoList\");\n\n    if (todosString !== null) {\n      let todos: to_do_model[] = JSON.parse(todosString) || [];\n\n      todos = todos.filter((todo: to_do_model) => todo.done !== type);\n\n      // Atualize o todoState com os dados filtrados\n      this.toDoState.set(todos);\n\n      // Salve os dados filtrados no armazenamento local\n      localStorage.setItem(\"ToDoList\", JSON.stringify(todos));\n    }\n  }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAElD,SAASC,mBAAmB,QAAQ,oCAAoC;;AAExE,MAGaC,sBAAsB;EAHnCC,YAAA;IAIS,KAAAC,SAAS,GAAGJ,MAAM,CAAqB,EAAE,CAAC;;EAE1CK,gBAAgBA,CAACC,MAAW;IACjC,IAAIA,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAKC,SAAS,EAAE;MAC3C,IAAI,CAACH,SAAS,CAACI,MAAM,CAAEC,KAAK,IAAI;QAC9B,IAAIA,KAAK,KAAK,IAAI,EAAE;UAClBA,KAAK,CAACC,IAAI,CAACJ,MAAM,CAAC;UAClBK,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;UAClB,IAAI,CAACI,kBAAkB,EAAE;;MAE7B,CAAC,CAAC;;EAEN;EAEOA,kBAAkBA,CAAA;IACvB,MAAMC,YAAY,GAAGC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACZ,SAAS,EAAE,CAAC;IACrDU,YAAY,IACVG,YAAY,CAACC,OAAO,CAACjB,mBAAmB,CAACkB,QAAQ,EAAEL,YAAY,CAAC;EACpE;EAEOM,kBAAkBA,CAAA;IACvBH,YAAY,CAACI,UAAU,CAACpB,mBAAmB,CAACkB,QAAQ,CAAC;EACvD;EAEOG,qBAAqBA,CAACC,IAAa;IACxC,IAAIC,WAAW,GAAGP,YAAY,CAACQ,OAAO,CAAC,UAAU,CAAC;IAElD,IAAID,WAAW,KAAK,IAAI,EAAE;MACxB,IAAIE,KAAK,GAAkBX,IAAI,CAACY,KAAK,CAACH,WAAW,CAAC,IAAI,EAAE;MAExDE,KAAK,GAAGA,KAAK,CAACE,MAAM,CAAEC,IAAiB,IAAKA,IAAI,CAACC,IAAI,KAAKP,IAAI,CAAC;MAE/D;MACA,IAAI,CAACnB,SAAS,CAAC2B,GAAG,CAACL,KAAK,CAAC;MAEzB;MACAT,YAAY,CAACC,OAAO,CAAC,UAAU,EAAEH,IAAI,CAACC,SAAS,CAACU,KAAK,CAAC,CAAC;;EAE3D;EAAC,QAAAM,CAAA,G;qBAvCU9B,sBAAsB;EAAA;EAAA,QAAA+B,EAAA,G;WAAtB/B,sBAAsB;IAAAgC,OAAA,EAAtBhC,sBAAsB,CAAAiC,IAAA;IAAAC,UAAA,EAFrB;EAAM;;SAEPlC,sBAAsB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}